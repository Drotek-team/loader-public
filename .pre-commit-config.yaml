fail_fast: true
default_install_hook_types:
  - commit-msg
  - pre-push
default_stages:
  - commit
  - manual
repos:
  - repo: https://github.com/python-poetry/poetry
    rev: 1.3.2
    hooks:
      # Check poetry configuration
      - id: poetry-check

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.0-alpha.4
    hooks:
      # Format javascript, json, yaml, ...
      - id: prettier
        exclude: '^iostar_json_gcs_.*\.json$'

  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.16
    hooks:
      - id: mdformat

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.33.0
    hooks:
      - id: markdownlint-fix
        args:
          - --disable
          - MD013 # line-length
          - MD024 # no-duplicate-heading
          - --

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      # Avoid committing large files
      - id: check-added-large-files
      # Add newline to end of file if missing
      - id: end-of-file-fixer
      # Change Windows end of line by linux end of line
      - id: mixed-line-ending
        args: ["--fix=lf"]
      # Remove trailing whitespace
      - id: trailing-whitespace

  - repo: local
    hooks:
      - id: ruff
        name: ruff
        description: Run 'ruff' for extremely fast Python linting
        entry: poetry run ruff --force-exclude --fix --exit-non-zero-on-fix
        language: system
        types_or: [python, pyi]
        require_serial: true
      - id: black
        name: black
        description: "Black: The uncompromising Python code formatter"
        entry: poetry run black
        language: system
        types_or: [python, pyi]
        require_serial: true
      - id: pytest
        name: pytest
        entry: poetry run pytest --cov=loader --cov=tests --ignore=tests/test_readme.py
        language: system
        pass_filenames: false
        always_run: true
      - id: pytest-examples
        name: pytest-examples
        entry: poetry run pytest -k test_readme
        language: system
        pass_filenames: false
        files: ^README\.md$
      - id: pyright
        name: pyright
        description: Python command line wrapper for pyright, a static type checker
        entry: poetry run pyright
        language: system
        types_or: [python, pyi]
        require_serial: true
      - id: commitizen
        name: commitizen check commit
        description: >
          Check whether the current commit message follows commiting rules. Allow
          empty commit messages by default, because they typically indicate to Git
          that the commit should be aborted.
        entry: poetry run cz check
        args: [--allow-abort, --commit-msg-file]
        stages: [commit-msg]
        language: system
      - id: commitizen-branch
        name: commitizen check branch
        description: >
          Check all commit messages that are already on the current branch but not the
          default branch on the origin repository. Useful for checking messages after
          the fact (e.g., pre-push or in CI) without an expensive check of the entire
          repository history.
        entry: poetry run cz check
        args: [--rev-range, origin/HEAD..HEAD]
        stages: [push, manual]
        always_run: true
        pass_filenames: false
        language: system
