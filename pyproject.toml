[tool.poetry]
name = "loader"
version = "0.1.1"
description = ""
authors = ["Thomas PERRIN <thomas.perrin@drotek.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
numpy = "^1.24.2"
pydantic = "^1.10.4"


[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
hypothesis = "^6.67.1"
pre-commit = "^3.0.4"
pyright = "^1.1.294"
pytest = "^7.2.1"
pytest-clarity = "^1.0.1"
pytest-cov = "^4.0.0"
pytest-xdist = "^3.2.0"
rope = "^1.7.0"
ruff = "^0.0.249"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ['py38']

[tool.isort]
profile = "black"

[tool.pyright]
typeCheckingMode = "strict"
venv = ".venv"

[tool.ruff] # https://github.com/charliermarsh/ruff#reference
required-version = "0.0.249"
target-version = "py38"
src = ["loader"]
select = ["ALL"]
ignore = [
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "D10",     # missing-docstring
    "E501",    # line-too-long
    "PLR0913", # too-many-arguments # TODO: Use dataclass instead
    "PLR2004", # magic-value-comparison
    "S101",    # assert-used
    "SIM105",  # use-contextlib-suppress
    "S110",    # try-except-pass
    "TCH",     # type-checking
]
unfixable = [
    "B007",   # unused-loop-control-variable
    "B021",   # f-string-docstring
    "ERA001", # commented-out-code
    "F401",   # unused-import
    "F541",   # f-string-missing-placeholders
    "F841",   # unused-variable
    "RUF100", # unused-noqa
    "T20",    # print-found
]

[tool.ruff.pydocstyle]
convention = "pep257"

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "csv"

[tool.ruff.per-file-ignores]
"tests/*.py" = ["SLF001"]

[tool.pytest.ini_options]
addopts = "--color=yes --exitfirst --failed-first --strict-config --strict-markers"
filterwarnings = ["error"]
pythonpath = ["loader"]
xfail_strict = true

[tool.coverage.run] # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true

[tool.coverage.report] # https://coverage.readthedocs.io/en/latest/config.html#report
fail_under = 100
precision = 1
show_missing = true
skip_covered = true
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain if tests do not hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
